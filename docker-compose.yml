# version: '3.8'

services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver
    ports:
      - "1433:1433"
    environment:
      SA_PASSWORD: ${SA_PASSWORD}
      ACCEPT_EULA: "Y"
    volumes:
      - sql_data:/var/opt/mssql

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"

  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    container_name: azurite
    ports:
      - "10000:10000"
      - "10001:10001"
      - "10002:10002"
    volumes:
      - azurite_data:/data

  authservice:
    container_name: authservice
    build:
      context: ./AuthService
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - ASPNETCORE_URLS=http://+:5000
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=AuthDb;User Id=sa;Password=${SA_PASSWORD};TrustServerCertificate=True;
    depends_on:
      - sqlserver
      - rabbitmq
      - redis

  productservice:
    container_name: productservice
    build:
      context: ./ProductService
      dockerfile: Dockerfile
    ports:
      - "5002:80"
    environment:
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=ProductDb;User Id=sa;Password=${SA_PASSWORD};TrustServerCertificate=True;
      - Redis__ConnectionString=redis:6379,abortConnect=false
      - Azure__Blob__ConnectionString=UseDevelopmentStorage=true;
      - Azure__Blob__ContainerName=product-images
    depends_on:
      - sqlserver
      - redis
      - rabbitmq
      - azurite

  gateway:
    container_name: gateway
    build:
      context: ./Gateway.Api
      dockerfile: Dockerfile
    ports:
      - "7000:80"

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    restart: unless-stopped
    depends_on:
      - gateway

volumes:
  sql_data:
  azurite_data:
